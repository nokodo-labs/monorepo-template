name: Code Promotion

on:
  workflow_call:
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

env:
  # Define promotion paths here
  # Format: source_branch -> target_branch
  PROMOTION_PATHS: |
    {
      "dev": "stable"
    }

concurrency:
  group: promotion-${{ github.ref_name }}
  cancel-in-progress: true

jobs:
  promote:
    name: Maintain Promotion PR
    runs-on: ubuntu-latest
    steps:
      - name: Parse promotion configuration
        id: config
        run: |
          PATHS='${{ env.PROMOTION_PATHS }}'
          SOURCE_BRANCH="${{ github.ref_name }}"
          TARGET_BRANCH=$(echo "$PATHS" | jq -r --arg sb "$SOURCE_BRANCH" '.[$sb] // empty')

          if [ -z "$TARGET_BRANCH" ]; then
            echo "No promotion path configured for branch: $SOURCE_BRANCH"
            echo "has_config=false" >> $GITHUB_OUTPUT
            exit 0
          fi

          echo "source_branch=$SOURCE_BRANCH" >> $GITHUB_OUTPUT
          echo "target_branch=$TARGET_BRANCH" >> $GITHUB_OUTPUT
          echo "has_config=true" >> $GITHUB_OUTPUT

      - name: Exit if no promotion path
        if: steps.config.outputs.has_config != 'true'
        run: echo "No promotion path configured for this branch."

      - name: Check for differences between branches
        id: diff
        if: steps.config.outputs.has_config == 'true'
        uses: actions/github-script@v8
        with:
          script: |
            const { data } = await github.rest.repos.compareCommits({
              owner: context.repo.owner,
              repo: context.repo.repo,
              base: '${{ steps.config.outputs.target_branch }}',
              head: '${{ steps.config.outputs.source_branch }}',
            });
            const hasDiff = data.status !== 'identical' && data.ahead_by > 0;
            core.setOutput('has_diff', hasDiff);

      - name: Exit if no diff
        if: steps.config.outputs.has_config == 'true' && steps.diff.outputs.has_diff != 'true'
        run: echo "No differences to promote."

      - name: Checkout repository
        if: steps.config.outputs.has_config == 'true' && steps.diff.outputs.has_diff == 'true'
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Build promotion changelog
        if: steps.config.outputs.has_config == 'true' && steps.diff.outputs.has_diff == 'true'
        id: changelog
        uses: mikepenz/release-changelog-builder-action@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fromTag: ${{ steps.config.outputs.target_branch }}
          toTag: ${{ steps.config.outputs.source_branch }}
          mode: "COMMIT"
          configurationJson: |
            {
              "categories": [
                {
                  "title": "## ‚ú® New Features",
                  "labels": ["feat"]
                },
                {
                  "title": "## üêõ Bug Fixes",
                  "labels": ["fix"]
                },
                {
                  "title": "## üîß Improvements",
                  "labels": ["perf", "refactor"]
                },
                {
                  "title": "## üìö Documentation",
                  "labels": ["docs"]
                },
                {
                  "title": "## ‚ôªÔ∏è Ops",
                  "labels": ["ci", "ops", "build", "test"]
                },
                {
                  "title": "## üßπ Miscellaneous",
                  "labels": ["chore", "style", "deps"]
                },
                {
                  "title": "## ‚è™ Reverts",
                  "labels": ["revert"]
                }
              ],
              "label_extractor": [
                {
                  "pattern": "^(build|chore|ci|docs|feat|fix|perf|refactor|revert|style|test|deps|ops){1}(\\([\\w\\-\\.]+\\))?(!)?: ([\\w ])+([\\s\\S]*)",
                  "on_property": "title",
                  "target": "$1"
                }
              ],
              "template": "#{{CHANGELOG}}\n\n## Full Changelog\n- Compare changes: https://github.com/${{ github.repository }}/compare/${{ steps.config.outputs.target_branch }}...${{ steps.config.outputs.source_branch }}",
              "empty_template": "## What's Changed\n\nNo user-facing changes were detected.\n\n## Full Changelog\n- Compare changes: https://github.com/${{ github.repository }}/compare/${{ steps.config.outputs.target_branch }}...${{ steps.config.outputs.source_branch }}",
              "pr_template": "- #{{TITLE}} by @#{{AUTHOR}} in ##{{NUMBER}}"
            }

      - name: Ensure labels exist
        if: steps.config.outputs.has_config == 'true' && steps.diff.outputs.has_diff == 'true'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh label create "bot" --color "000000" --description "managed by an automated system" --force
          gh label create "promotion" --color "ff69b4" --description "related to a code promotion" --force

      - name: Create or update promotion PR
        if: steps.config.outputs.has_config == 'true' && steps.diff.outputs.has_diff == 'true'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SOURCE_BRANCH: ${{ steps.config.outputs.source_branch }}
          TARGET_BRANCH: ${{ steps.config.outputs.target_branch }}
          PR_TITLE: "chore(promotion): promote ${{ steps.config.outputs.source_branch }} to ${{ steps.config.outputs.target_branch }}"
          PR_BODY: |
            ## ü§ñ Automated Promotion

            ${{ steps.changelog.outputs.changelog }}

            ---
            - Generated by workflow run [${{ github.run_id }}](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
            - Trigger: `${{ github.event_name }}`
            - Merge strategy expectation: **merge commit** (no squash) to preserve history
        run: |
          set +e
          pr_exists=$(gh pr list --head "$SOURCE_BRANCH" --base "$TARGET_BRANCH" --json number --jq '.[0].number')
          set -e

          if [ -n "$pr_exists" ]; then
            echo "Updating existing PR #$pr_exists"
            gh pr edit "$pr_exists" \
              --title "$PR_TITLE" \
              --body "$PR_BODY"
            
            # Add labels separately as edit doesn't support --add-label
            gh pr edit "$pr_exists" --add-label bot || true
            gh pr edit "$pr_exists" --add-label promotion || true
          else
            echo "Creating new promotion PR"
            gh pr create \
              --title "$PR_TITLE" \
              --body "$PR_BODY" \
              --base "$TARGET_BRANCH" \
              --head "$SOURCE_BRANCH" \
              --label bot,promotion
          fi
