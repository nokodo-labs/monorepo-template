name: Backend CI

on:
  workflow_call:
    inputs:
      run_tests:
        type: boolean
        description: "whether to run tests"
        required: false
        default: true
      run_lint:
        type: boolean
        description: "whether to run linting"
        required: false
        default: false
  workflow_dispatch:
    inputs:
      run_tests:
        description: "whether to run tests"
        type: boolean
        required: false
        default: true
      run_lint:
        description: "whether to run linting"
        type: boolean
        required: false
        default: false

jobs:
  format:
    name: Check Formatting
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: backend
    steps:
      - uses: actions/checkout@v5

      - name: Install uv
        uses: astral-sh/setup-uv@v7
        with:
          enable-cache: true
          working-directory: backend
      - name: Install Dev Dependencies
        run: uv sync --all-extras
      - name: Check Code Formatting
        run: uv run ruff check .
      - name: Check Import Sorting
        run: uv run ruff check . --select I --no-fix --output-format=github

  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    needs: format
    if: ${{ inputs.run_lint }}
    defaults:
      run:
        shell: bash
        working-directory: backend
    steps:
      - uses: actions/checkout@v5
      - name: Install uv
        uses: astral-sh/setup-uv@v7
        with:
          enable-cache: true
          working-directory: backend
      - name: Install Dev Dependencies
        run: uv sync --all-extras
      - name: Lint Code
        run: uv run ruff check . --output-format=github

  build_and_test:
    name: Build and Test on Python ${{ matrix.python }}
    runs-on: ubuntu-latest
    needs: format
    strategy:
      fail-fast: false
      matrix:
        python:
          - file
          - "3.14.x"
    continue-on-error: ${{ matrix.python != 'file' }}
    defaults:
      run:
        shell: bash
        working-directory: backend
    steps:
      - uses: actions/checkout@v5

      - name: Install uv
        uses: astral-sh/setup-uv@v7
        with:
          enable-cache: true
          working-directory: backend
          python-version: ${{ matrix.python != 'file' && matrix.python || '' }}
      - name: Install Dependencies
        run: |
          echo "Running on Python ${{ matrix.python }}"
          uv sync --all-extras
      - name: Run Tests
        run: uv run pytest -v
