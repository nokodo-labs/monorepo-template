name: Release

on:
  workflow_call:
    outputs:
      pr_created:
        value: ${{ jobs.release-please.outputs.pr_created }}
      release_created:
        value: ${{ jobs.release-please.outputs.release_created }}
      tag_name:
        value: ${{ jobs.release-please.outputs.tag_name }}
      version:
        value: ${{ jobs.release-please.outputs.version }}
  workflow_dispatch:

jobs:
  release-please:
    name: Release Please
    runs-on: ubuntu-latest
    concurrency:
      group: release-${{ github.ref_name }}
      cancel-in-progress: false
    permissions:
      contents: write
      pull-requests: write
    outputs:
      pr_created: ${{ steps.release.outputs.pr_created || steps.pre-release.outputs.pr_created }}
      release_created: ${{ steps.release.outputs.release_created || steps.pre-release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name || steps.pre-release.outputs.tag_name }}
      version: ${{ steps.release.outputs.version || steps.pre-release.outputs.version }}

    steps:
      - name: Manage Prerelease
        if: ${{ github.ref_name == 'dev' }}
        id: pre-release
        uses: googleapis/release-please-action@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          config-file: tools/release_please/release-please-config.prerelease.json
          manifest-file: tools/release_please/release-please-manifest.json
          target-branch: dev

      - name: Manage Full Release
        if: ${{ github.ref_name == 'stable' }}
        id: release
        uses: googleapis/release-please-action@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          config-file: tools/release_please/release-please-config.json
          manifest-file: tools/release_please/release-please-manifest.json
          target-branch: stable

  docker-publish:
    name: Build and Publish Docker Image
    needs: release-please
    if: needs.release-please.outputs.version != ''
    uses: ./.github/workflows/docker-publish.yml
    secrets: inherit
    permissions:
      contents: read
      packages: write
    with:
      release_version: ${{ needs.release-please.outputs.version }}
